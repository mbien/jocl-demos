/* !---- DO NOT EDIT: This file autogenerated by com/sun/gluegen/JavaEmitter.java on Tue Feb 09 18:20:26 CET 2010 ----! */


package com.jogamp.opencl.demos.julia3d.structs;

import com.jogamp.common.nio.*;


public class RenderingConfig {

  StructAccessor accessor;
  final static int intSize = Integer.SIZE >> 3;
  final static int floatSize = Float.SIZE >> 3;

  public static int size() {
    // width
    int size = intSize;
    // height
    size += intSize;
    // sampling size
    size += intSize;
    // fast rendering
    size += intSize;
    // enable shadow
    size += intSize;
    // max iterations
    size += intSize;
    // epsilon
    size += floatSize;
    // mu 
    size += (4 * floatSize);
    // light
    size += (3 * floatSize);
    // Camera
    size += Camera.size();
    return size; 
  }

  public static RenderingConfig create() {
    return create(Buffers.newDirectByteBuffer(size()));
  }

  public static RenderingConfig create(java.nio.ByteBuffer buf) {
    return new RenderingConfig(buf);
  }

  RenderingConfig(java.nio.ByteBuffer buf) {
    accessor = new StructAccessor(buf);
  }

  public java.nio.ByteBuffer getBuffer() {
    return accessor.getBuffer();
  }
  
  public RenderingConfig setWidth(int val) {
    accessor.setIntAt(0, val);
    return this;
  }

  public int getWidth() {
    return accessor.getIntAt(0);
  }

  public RenderingConfig setHeight(int val) {
    accessor.setIntAt(4, val);
    return this;
  }

  public int getHeight() {
    return accessor.getIntAt(4);
  }

  public RenderingConfig setSuperSamplingSize(int val) {
    accessor.setIntAt(8, val);
    return this;
  }

  public int getSuperSamplingSize() {
    return accessor.getIntAt(8);
  }

  public RenderingConfig setActvateFastRendering(int val) {
    accessor.setIntAt(12, val);
    return this;
  }

  public int getActvateFastRendering() {
    return accessor.getIntAt(12);
  }

  public RenderingConfig setEnableShadow(int val) {
    accessor.setIntAt(16, val);
    return this;
  }

  public int getEnableShadow() {
    return accessor.getIntAt(16);
  }

  public RenderingConfig setMaxIterations(int val) {
    accessor.setIntAt(20, val);
    return this;
  }

  public int getMaxIterations() {
    return accessor.getIntAt(20);
  }

  public RenderingConfig setEpsilon(float val) {
    accessor.setFloatAt(24, val);
    return this;
  }

  public float getEpsilon() {
    return accessor.getFloatAt(24);
  }

  public RenderingConfig setMu(float[] val) {
    accessor.setFloatsAt(28, val);
    return this;
  }

  public float[] getMu() {
    return accessor.getFloatsAt(28, new float[4]);
  }

  public RenderingConfig setLight(float[] val) {
    accessor.setFloatsAt(44, val);
    return this;
  }

  public float[] getLight() {
    return accessor.getFloatsAt(44, new float[3]);
  }

  public Camera getCamera() {
    return new Camera(accessor.slice(56, 60));
  }
  

}
